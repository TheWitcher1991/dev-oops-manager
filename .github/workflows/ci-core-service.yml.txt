name: Core Service CI

on:
  push:
    branches: [ "main" ]

jobs:
  core-service:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ '3.12' ]

    services:
      postgres:
        image: postgres:16-alpine
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        env:
          POSTGRES_DB: heyhey
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
        ports:
          - 5432:5432

      redis:
        image: redis:7.4.0-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379
        ports:
          - 6379:6379

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install poetry
          pip install poetry-plugin-export
          poetry export --without-hashes --without dev -f requirements.txt -o requirements.txt
          pip install --no-cache-dir -r requirements.txt
        working-directory: ./services/core

      - name: Run makemigrations
        run: |
          python manage.py makemigrations
        working-directory: ./services/core

      - name: Run migrations
        run: |
          python manage.py migrate
        working-directory: ./services/core

      #- name: Run load fixtures
      #  run: |
      #    python manage.py loaddata toolkit/fixtures/[NAME].json
      #  working-directory: ./services/core

      - name: Run tests
        run: python manage.py test
        working-directory: ./services/core